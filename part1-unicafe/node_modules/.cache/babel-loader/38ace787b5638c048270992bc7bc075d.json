{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Attila\\\\Desktop\\\\myproject\\\\part1\\\\part1-unicafe\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = _ref => {\n  let {\n    handleClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 1\n  }, this);\n};\n\n_c = Button;\n\nconst Statistics = _ref2 => {\n  let {\n    text,\n    state,\n    moretext\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [text, \" \", state, \" \", moretext]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 1\n  }, this);\n};\n\n_c2 = Statistics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [average, setAverage] = useState(0);\n\n  const handleGood = () => {\n    setGood(good + 1);\n    setAverage(average + 1);\n  };\n\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n    setAverage(average + 0);\n  };\n\n  const handleBad = () => {\n    setBad(bad + 1);\n    setAverage(average - 1);\n  };\n\n  if (good + neutral + bad >= 1) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"give feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        handleClick: handleGood,\n        text: \"good\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        handleClick: handleNeutral,\n        text: \"neutral\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        handleClick: handleBad,\n        text: \"bad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n        text: \"good\",\n        state: good\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n        text: \"neutral\",\n        state: neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n        text: \"bad\",\n        state: bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n        text: \"all\",\n        state: good + neutral + bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n        text: \"average\",\n        state: average / (good + neutral + bad)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n        text: \"positive\",\n        state: good / (good + neutral + bad) * 100,\n        moretext: \"%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleNeutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleBad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"HXSXMgG3ryl90UEi32VB6xGpQdA=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["useState","Button","handleClick","text","Statistics","state","moretext","App","good","setGood","neutral","setNeutral","bad","setBad","average","setAverage","handleGood","handleNeutral","handleBad"],"sources":["C:/Users/Attila/Desktop/myproject/part1/part1-unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\r\n\r\n\r\nconst Button = ({handleClick, text}) => (\r\n<button onClick={handleClick}>{text}</button>\r\n)\r\n\r\nconst Statistics = ({text,state,moretext}) => (\r\n<p>{text} {state} {moretext}</p>\r\n  )\r\n\r\n\r\nconst App = () => {\r\n  // save clicks of each button to its own state\r\n  const [good, setGood] = useState(0)\r\n  const [neutral, setNeutral] = useState(0)\r\n  const [bad, setBad] = useState(0)\r\n  \r\n  const [average, setAverage] = useState(0)\r\n\r\n\r\n  const handleGood = () => {\r\n    setGood(good + 1)\r\n    setAverage(average + 1)\r\n  }\r\n  const handleNeutral = () => {\r\n    setNeutral(neutral + 1)\r\n    setAverage(average + 0)\r\n  }\r\n\r\n  const handleBad = () => {\r\n    setBad(bad + 1)\r\n    setAverage(average - 1)\r\n  }\r\n  \r\n\r\n  if((good+neutral+bad)>=1) {\r\n\r\n  return (\r\n    <div>\r\n      <h1>give feedback</h1>\r\n      <Button handleClick={handleGood} text=\"good\"/>\r\n      <Button handleClick={handleNeutral} text=\"neutral\"/>\r\n      <Button handleClick={handleBad} text=\"bad\"/>\r\n      <h1>statistics</h1>\r\n      <Statistics text=\"good\" state={good}/>\r\n      <Statistics text=\"neutral\" state={neutral}/>\r\n      <Statistics text=\"bad\" state={bad}/>\r\n      <Statistics text=\"all\" state={good+neutral+bad}/>\r\n      <Statistics text=\"average\" state={average/(good+neutral+bad)}/>\r\n      <Statistics text=\"positive\" state={((good/(good+neutral+bad))*100)} moretext=\"%\"/>\r\n    </div>\r\n    )\r\n  }\r\n  else return (\r\n    <div>\r\n      <h1>give feedback</h1>\r\n      <Button handleClick={handleGood} text=\"good\"/>\r\n      <Button handleClick={handleNeutral} text=\"neutral\"/>\r\n      <Button handleClick={handleBad} text=\"bad\"/>\r\n      <h1>statistics</h1>\r\n      <p>No feedback given</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module"}